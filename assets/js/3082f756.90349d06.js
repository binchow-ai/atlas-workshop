"use strict";(self.webpackChunkatlas_docs_workshop=self.webpackChunkatlas_docs_workshop||[]).push([[676],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=r,b=d["".concat(i,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(b,s(s({ref:t},c),{},{components:n})):a.createElement(b,s({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:r,s[1]=l;for(var u=2;u<o;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>k});var a=n(7462),r=n(7294),o=n(6010),s=n(2466),l=n(6550),i=n(1980),u=n(7392),c=n(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:r}}=e;return{value:t,label:n,attributes:a,default:r}}))}function p(e){const{values:t,children:n}=e;return(0,r.useMemo)((()=>{const e=t??d(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,i._X)(o),(0,r.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(a.location.search);t.set(o,e),a.replace({...a.location,search:t.toString()})}),[o,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,o=p(e),[s,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:o}))),[i,u]=b({queryString:n,groupId:a}),[d,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,o]=(0,c.Nk)(n);return[a,(0,r.useCallback)((e=>{n&&o.set(e)}),[n,o])]}({groupId:a}),h=(()=>{const e=i??d;return m({value:e,tabValues:o})?e:null})();(0,r.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:s,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)}),[u,g,o]),tabValues:o}}var h=n(2389);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.o5)(),p=e=>{const t=e.currentTarget,n=c.indexOf(t),a=u[n].value;a!==l&&(d(t),i(a))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;t=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;t=c[n]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},s,{className:(0,o.Z)("tabs__item",f.tabItem,s?.className,{"tabs__item--active":l===t})}),n??t)})))}function x(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",f.tabList)},r.createElement(y,(0,a.Z)({},e,t)),r.createElement(x,(0,a.Z)({},e,t)))}function k(e){const t=(0,h.Z)();return r.createElement(v,(0,a.Z)({key:String(t)},e))}},6770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>u,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(4866),s=n(5162),l=n(4996);const i={sidebar_position:2},u="Indexing Basics",c={unversionedId:"indexing-basics/indexing-basics",id:"indexing-basics/indexing-basics",title:"Indexing Basics",description:"In any database, indexes support the efficient execution of queries. Without them, the database must scan every document in a collection or table to select those that match the query statement. If an appropriate index exists for a query, the database can use the index to limit the number of documents it must inspect.",source:"@site/docs/indexing-basics/indexing-basics.md",sourceDirName:"indexing-basics",slug:"/indexing-basics/",permalink:"/docs/indexing-basics/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/indexing-basics/indexing-basics.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Explain Plans",permalink:"/docs/indexing-basics/explain-plans"}},d={},p=[],m={toc:p},b="wrapper";function g(e){let{components:t,...n}=e;return(0,r.kt)(b,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"indexing-basics"},"Indexing Basics"),(0,r.kt)("p",null,"In any database, indexes support the efficient execution of queries. Without them, the database must scan every document in a collection or table to select those that match the query statement. If an appropriate index exists for a query, the database can use the index to limit the number of documents it must inspect."),(0,r.kt)("p",null,"MongoDB offers a broad range of ",(0,r.kt)("a",{parentName:"p",href:"https://docs.mongodb.com/manual/indexes"},"index types and features")," with language-specific sort orders to support complex access patterns to your data. MongoDB indexes can be created and dropped on-demand to accommodate evolving application requirements and query patterns and can be declared on any field within your documents, including fields nested within arrays."),(0,r.kt)("p",null,"The order of a compound index in MongoDB has a best practices rule called ESR. This rule stands for Equality, Sort and Range field placement in the index definition. "),(0,r.kt)("p",null,"Let's create some indexes for our query."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"data-explorer",label:"Data Explorer",default:!0,mdxType:"TabItem"},(0,r.kt)("p",null,'  Data explorer allows us to create an index by going to the collection "Indexes" tab and creating a new index. Add the fields in the following order to try and cover our query predicts:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n"cast" :1,\n"year" : 1,\n"title" : 1\n}\n')),(0,r.kt)("img",{alt:"'Create a database' section in MongoDB Atlas highlighting the 'Build a database' button",src:(0,l.Z)("/img/chapter-2-atlas/data-explorer-index.png"),border:"1px"})),(0,r.kt)(s.Z,{value:"compass",label:"Compass",mdxType:"TabItem"},(0,r.kt)("p",null,'  Data explorer allows us to create an index by going to the collection "Indexes" tab and creating a new index. Add the fields in the following order to try and cover our query predicts:'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n"cast" :1,\n"year" : 1,\n"title" : 1\n}\n')),(0,r.kt)("img",{alt:"'Create a database' section in MongoDB Atlas highlighting the 'Build a database' button",src:(0,l.Z)("/img/chapter-2-atlas/index-compass.png"),border:"1px"})),(0,r.kt)(s.Z,{value:"shell",label:"MongoDB Shell",mdxType:"TabItem"},(0,r.kt)("p",null,"With the shell creating indexes is done via the ",(0,r.kt)("inlineCode",{parentName:"p"},"createIndex")," command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'\ndb.movies.createIndex(  {\n  "cast" :1,\n  "year" : 1,\n  "title" : 1\n})\n')))),(0,r.kt)("p",null,"Now lets see the explain plans post index creation"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"compass",label:"Compass",mdxType:"TabItem"},(0,r.kt)("p",null," The query now is using an index to minimize the amount of scanned documents, however, the query is still doing an in-memory sort"),(0,r.kt)("img",{alt:"'Create a database' section in MongoDB Atlas highlighting the 'Build a database' button",src:(0,l.Z)("/img/chapter-2-atlas/compass-no-sort.png"),border:"1px"})),(0,r.kt)(s.Z,{value:"shell",label:"MongoDB Shell",mdxType:"TabItem"},"If we use the `.explain(true)` output on that query we will see that an index is used (`IXSCAN` stage), however, there is in memory sort.",(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},' db.movies.find(\n    {\n        "cast": "Bill Murray",\n        "year": {$gte: 2000}\n    }\n)\n.sort(\n    {"title": 1}\n).explain(true)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"}," inputStage: {\n        stage: 'SORT',\n        nReturned: 12,\n        executionTimeMillisEstimate: 0,\n        works: 26,\n        advanced: 12,\n        needTime: 13,\n        needYield: 0,\n        saveState: 0,\n        restoreState: 0,\n        isEOF: 1,\n        sortPattern: {\n          title: 1\n        },\n        memLimit: 33554432,\n        type: 'default',\n        totalDataSizeSorted: 1281,\n        usedDisk: false,\n        inputStage: {\n          stage: 'IXSCAN',\n")))),(0,r.kt)("p",null,"Lets change the order of the fields to reflect the Equality, Sort and Range order:"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"compass",label:"Compass",mdxType:"TabItem"},(0,r.kt)("p",null,"  To follow the ESR rule lets use the  order according to our query ",(0,r.kt)("inlineCode",{parentName:"p"},"cast - Equality"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"title- Sort")," and last ",(0,r.kt)("inlineCode",{parentName:"p"},"year - Range"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n"cast" :1,\n"title" : 1,\n"year" : 1\n}\n')),(0,r.kt)("p",null,"And drop the previous index."),(0,r.kt)("img",{alt:"'Create a database' section in MongoDB Atlas highlighting the 'Build a database' button",src:(0,l.Z)("/img/chapter-2-atlas/compass-ESR.png"),border:"1px"})),(0,r.kt)(s.Z,{value:"shell",label:"MongoDB Shell",mdxType:"TabItem"},(0,r.kt)("p",null," To follow the ESR rule lets use the  order according to our query ",(0,r.kt)("inlineCode",{parentName:"p"},"cast - Equality"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"title- Sort")," and last ",(0,r.kt)("inlineCode",{parentName:"p"},"year - Range"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'\ndb.movies.createIndex(  {\n  "cast" :1,\n    "title" : 1\n  "year" : 1\n\n})\n\ndb.movies.dropIndex({\n  "cast" :1,\n  "year" : 1,\n  "title" : 1\n})\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},' db.movies.find(\n    {\n        "cast": "Bill Murray",\n        "year": {$gte: 2000}\n    }\n)\n.sort(\n    {"title": 1}\n).explain(true)\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"}," executionStages: {\n      stage: 'FETCH',\n      nReturned: 12,\n      executionTimeMillisEstimate: 0,\n      works: 21,\n      advanced: 12,\n      needTime: 8,\n      needYield: 0,\n      saveState: 0,\n      restoreState: 0,\n      isEOF: 1,\n      docsExamined: 12,\n      alreadyHasObj: 0,\n      inputStage: {\n        stage: 'IXSCAN',\n")))),(0,r.kt)("p",null,"As you can see only an index is used and no sort stage is present."))}g.isMDXComponent=!0}}]);